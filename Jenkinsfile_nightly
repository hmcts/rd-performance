#!groovy

properties([
        pipelineTriggers([cron('00 22 * * *')]),
        parameters([
                string(name: 'ENVIRONMENT', defaultValue: 'aat', description: 'Environment to test'),
                string(name: 'URL_TO_TEST', defaultValue: 'http://rd-professional-api-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
                string(name: 'IDAM_URL', defaultValue: 'https://idam-api.aat.platform.hmcts.net', description: 'The IDAM API Url'),
                string(name: 'BaseURL', defaultValue: 'http://rd-professional-api-aat.service.core-compute-aat.internal', description: 'The professional reference data Url'),
                string(name: 'OAUTH2_CLIENT_SECRET', defaultValue: '*****', description: 'OAUTH2 client secret')
        ])
])



@Library("Infrastructure") 


def product = "rd"
def component = "professional-api"

def secrets = [
  'rd-${env}':
    [
      secret('OAUTH2-CLIENT-SECRET', 'OAUTH2_CLIENT_SECRET'),
      secret('s2s-secret', 'S2S_SECRET')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

withNightlyPipeline("java", product, component) {
    env.TEST_URL = 'http://rd-professional-api-aat.service.core-compute-aat.internal'
    env.BaseURL = 'http://rd-professional-api-aat.service.core-compute-aat.internal'
    env.IDAM_URL = 'https://idam-api.aat.platform.hmcts.net'
    env.OAUTH2_CLIENT_SECRET = params.OAUTH2_CLIENT_SECRET

    enablePerformanceTest()

    //enableSlackNotifications('#prd-nightly-builds')

    after('performanceTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }



}
